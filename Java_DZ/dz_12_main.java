package Java_DZ;

import Java_DZ.dz_12.*;

/**
 * Тестовые задачи по теме SOLID.
 * 
 * Версия: 1.0
 * Автор: Рябков Сергей
 * Дата: 18.07.2023 года.
 * 
 * Условия задач прописанны непосредственно в каждом файле.
 * 
 * {@link task1_SRP} - Задача №1. - В соответствии с принципом 
 * единственной ответственности (Single Responsibility Principle), 
 * необходимо разделить класс Employee на два класса: Employee и SalaryCalculator. 
 * Класс Employee будет отвечать только за хранение информации о сотруднике, 
 * а класс SalaryCalculator будет отвечать за расчет чистой заработной платы сотрудника. 
 * 
 * {@link task2_OCP} - Задача №2. - Теперь класс SpeedCalculation открыт для расширения, 
 * поскольку при добавлении новых типов транспортных средств, например, 
 * Motorcycle или Truck, мы можем просто создать новый подкласс Motorcycle или Truck, 
 * унаследованный от Vehicle и реализующий метод calculateAllowedSpeed(). 
 * Это позволяет нам изменять поведение расчета разрешенной скорости для каждого типа 
 * транспортного средства, не изменяя код класса SpeedCalculation.
 * 
 * {@link task3_ISP} - Задача №3. - В этой переписанной версии интерфейс 
 * Shape представляет только площадь фигуры, 
 * а интерфейс SolidShape расширяет Shape и добавляет метод volume() для объемных фигур. 
 * Класс Circle реализует только интерфейс Shape, 
 * так как круг является плоской фигурой и не имеет объема. 
 * Класс Cube реализует интерфейс SolidShape, 
 * так как куб является объемной фигурой и имеет и площадь, и объем.
 */

public class dz_12_main {
    public static void main(String[] args){
        task1_SRP.main(args);
        task2_OCP.main(args);
        task3_ISP.main(args);
    }
}
